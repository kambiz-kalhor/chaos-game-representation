#!/usr/bin/env python
# coding: utf-8

# # HERE ARE MY SEQUENCES

# In[310]:


id_1 = 'test1'
seq_1 = 'A'


# In[311]:


id_2 = 'test1'
seq_2 = 'AG'


# In[312]:


id_3 = 'test1'
seq_3 = 'AGT'


# In[313]:


id_4 = 'test1'
seq_4 = 'AGTA'


# In[314]:


id_5 = 'KT935587.1 Abyssicoccus albus strain LIPI11-2-Ac043 16S ribosomal RNA gene, partial sequence'
seq_5 = 'AGGAACTGGATTACGCCAGCTGCCCTTCAGAGTTTGATCCTGGCTCAGGATGAACGCTGGCGGCGTGCCTAATACATGCAAGTCGAGCGCGTTTCGAAGGTGCTTGCACCTTCAATGAAACGAGCGGCGGACGGGTGAGTAACACGTAGGTAACCTACCTTTATGACTGGGATAACCACGGGAAACCGGGGCTAATACCGGATAAGATTTAGCTTCGCATGAAGCAGAAGTAAAAGGCAGTTTCGGCTGTCACATAAAGATGGACCTGCGGCGCATTAGCTAGTTGGAGAGGTAAGAGCTCCCCAAGGCGACGATGCGTAGCCGACCTGAGAGGGTGATCGGCCACACTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTAGGGAATCTTCCGCAATGGACGAAAGTCTGACGGAGCAACGCCGCGTGAGTGAAGAAGGTTTTCGGATCGTAAAGCTCTGTTGTTAAGGAAGAACACCATGGATAGGAAATGATCGATGGATGACGGTACTTAACCAGAAAGCCACGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGTGGCAAGCGTTATCCGGAATTATTGGGCGTAAAGCGCGCGTAGGCGGTTTCTTAAGTCTGATGTGAAAGCCCCCGGYTCAACCGGGGAGGGTCATTGGAAACTGGGGAACTTGAGTACAGAAGAGGAGAGTGGAATTCCATGTGTAGCGGTGAAATGCGCAGAGATATGGAGGAACACCAGTGGCGAAGGCGGCTCTCTGGTCTGAAACTGACGCTGAGGTGCGAAAGCGTGGGGATCAAACAGGATTAGATACCCTGGTAGTCCACGCTGTAAACGATGAGTGCTAAGTGTTAGGGGGTTTCCGCCCCTTAGTGCTGCAGTAAACGCATTAAGCACTCCGCCTGGGGAGTACGGCCGCAAGGCTGAAACTCAAAGGAATTGACGGGGACCTGCACAAGCGGTGGARCATGTGGTTTAATTCGAAGCAACGCGAAGAACCTTACCAAATCTTGACATCCTCTGACAACTTTAGAGATAAAGTGTCCCTTCGGGGCAGAGAGACAGGTGGTGCATGGTTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTAACATTAGTTGCCATCATTGAGTTGGGCACTCTAATGTGACTGCCGGTGACAAACCGGAGGAAGGTGGGGATGACGTCAAATCATCATGCCCCTTATGATTTGGGCTACACACGTGCTACAATGGATAGGAACAAAGGGTGGCGAAGTCGTGAGATGAAGCAAATCCCATAAAACTATTCCCAGTTCGGATTGTAGTCTGCAACTCGACTACATGAAGGTGGAATCGCTAGTAATCGTGGATCAGCATGCCACGGTGAATACGTTCCCAGGTCTTGTACACACCGCCCGTCACACCACGAGAGTTCGTAACACCCGAAGCCGGTGGGCTAACATTGAGGCAGCCGTCGAAGGTGGGACGAATGATTGGGGTGAAGTCGTAACAAGGTAGCCGTATCGGAAGGTGCGGCTGGATCACCTCCTAAGGGCAG'


# In[315]:


id_6 = 'KP233895.1 Abyssivirga alkaniphila strain L81 16S ribosomal RNA gene, partial sequence'
seq_6 ='AGAGTTTGATCCTGGCTCAGGATGAACGCTGGCGGCGTGCTTAACACATGCAAGTCGAGCGAGAAGCTATCTATTGAACCTTCGGGTGATTTAGATAGTGGAAAGCGGCGGACGGGTGAGTAACGCGTGGGTAACCTGCCCTATGCAGGGGGATAACACATTGAAAAGTGTGCTAATACCGCATAAGACCACAGAGTCGCATGACTCGGTGGTAAAAACTCCGGTAGCATAGGATGGACCCGCGTCTGATTAGCTAGTAGGTAAGGTAACGGCTTACCTAGGCGACGATCAGTAGCCGACCTGAGAGGGTGATCGGCCACATTGGGACTGAGACACGGCCCAAACTCCTACGGGAGGCAGCAGTGGGGAATATTGCACAATGGGGGAAACCCTGATGCAGCGACGCCGCGTGAAGGAAGAAGGTTTTCGGATCGTAAACTTCTATCAGCAGGGAAGATAGTGACAGTACCTGACTAAGAAGCCCCGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGGGGCAAGCGTTATCCGGATTTACTGGGTGTAAAGGGTGCGTAGGCGGCGAAGTAAGTCAGATGTGAAAGCCCGAGGCTCAACCTCGGGACTGCATTTGAAACTGCTTTGCTAGAGTGCAGGAGAGGAAAGCGGAATTCCTAGTGTAGCGGTGAAATGCGTAGATATTAGGAGGAACACCAGTGGCGAAGGCGGCTTTCTGGACTGTAACTGACGCTGAGGCACGAAAGCGTGGGGAGCGAACAGGATTAGATACCCTGGTAGTCCACGCCGTAAACGATGAATGCTAGGTGTCGGGGGTCGAACCTCGGTGCCGCAGCAAACGCATTAAGCATTCCACCTGGGGAGTACGATCGCAAGATTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCGGTGGAGCATGTGGTTTAATTCGAAGCAACGCGAAGAACCTTACCAAATCTTGACATCCTTCTGACCGTTCCTTAATCGGAACTTTTCTTCGGAACAGAAGTGACAGGTGGTGCATGGTTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCTTATCTTTAGTAGCCAGCAAGTTAAGTTGGGGACTCTAGAGAGACTGCCGGGGACAACTCGGAGGAAGGTGGGGATGACGTCAAATCATCATGCCCCTTATGATTTGGGCTACACACGTGCTACAATGGCGGTGACAAAGGGAAGCAAAATGGTGACATGGAGCAAATCCCAAAAAAGCCGTCCCAGTTCGGATTGTAGTCTGCAACTCGACTACATGAAGTTGGAATCGCTAGTAATCGCGAATCAGAATGTCGCGGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGGGAGTTGGAAGCGCCCGAAGCCAGTGACTCAACTGCAAAGAGAGAGCTGTCGAAGGTGAAGCCGATGACTAGGGTGAAGTCGTAACAAGGTAGCCGTATCGGAAGGTGCGGCTGGATCACCTCCTT'


# In[316]:


id_7 = 'AY959944.2 Clostridium alkalicellum 16S ribosomal RNA gene, partial sequence'
seq_7 = 'GTTTGATCCTGGCTCAGGATGAACGCTGGCGGCGTGCCTAACACATGCAAGTCGAGCGGGAACTATGGAGTAGCTTGCTATTCTATAGTTCTAGCGGCGGACGGGTGAGTAACGCGTGGGCAACCTGCCTCATACAGGGGGATAACACTGGGAAACTAGTGCTAATACCGCATGATATCAATGATACGCATGTATTGATGATCAAAGGAGTAATCCGGTATGAGATGGGCCCGCGTCCGATTAGTTAGTTGGTAGGGTAACGGCCTACCAAGACTGCGATCGGTAGCCGAACTGAGAGGTTGATCGGCCACATTGGGACTGAGACACGGCCCAGACTCCTACGGGAGGCAGCAGTGGGGAATATTGCGCAATGGGGGAAACCCTGACGCAGCAACGCCGCGTGAAGGATGAAGGTTTTCGGATTGTAAACTTCTTTGATTGGGGAAGAATAAATGACGGTACCCAAAAAACAAGCCACGGCTAACTACGTGCCAGCAGCCGCGGTAATACGTAGGTGGCAAGCGTTATCCGGAATTACTGGGTGTAAAGGGCGTGTAGGCGGGGATGCAAGTCAGATGTGAAATTCCGGGGCTCAACCCCGGAGGTGCATCTGAAACTGTGTCTCTTGAGTGCTGGAGAGGAAAGCGGAATTCCTAGTGTAGCGGTGAAATGCGTAGATATTAGGAGGAACACCAGTGGCGAAGGCGGCTTTCTGGACAGTAACTGACGCTGAGGCGCGAAAGCGTGGGGAGCAAACAGGATTAGATACCCTGGTAGTCCACGCCGTAAACGATGGATACTAGGTGTAGGAGGTATCGACCCCTCCTGTGCCGGAGTTAACACAATAAGTATCCCACCTGGGGAGTACGGCCGCAAGGTTGAAACTCAAAGGAATTGACGGGGGCCCGCACAAGCAGTGGAGTATGTGGTTTAATTCGAAGCAACGCGAAGAACCTTACCAGGGCTTGACATCCCTTGACAGATCTAGAGATAGATTTTCCCTTCGGGGCAAGGTGACAGGTGGTGCATGGTTGTCGTCAGCTCGTGTCGTGAGATGTTGGGTTAAGTCCCGCAACGAGCGCAACCCCTGTTGTTAGTTGCCATCATTAAGTTGGGCACTCTAGCGAGACTGCCGGTGACAAATCGGAGGAAGGTGGGGACGACGTCAAATCATCATGCCCCTTATGTCCTGGGCTACACACGTACTACAATGGCTGTTACAGAGGGAAGCGAGACCGCGAGGTGGAGCAAACCCCCAAAAGCAGCCCCAGTTCAGATTGCAGGCTGAAACTCGCCTGCATGAAGTCGGAATTGCTAGTAATGGCAGGTCAGCATACTGCCGTGAATACGTTCCCGGGCCTTGTACACACCGCCCGTCACACCATGAGAGTCTGCAACACCCGAAGTCAGTAGTCTAACCGCAAGGAGGACGCTGCCGAAGGTGGGGCCGATGATTGGGGTGAAGTCGTAACAAGGTAACCGTATCGGA'


# # MY IDEA ---> CGR for DNA sequences

# In[317]:


def get_nt_and_location_give_pos(x,y,nt):
    nts = ['A','T','C','G']
    coordinates = [(-1,1),(1,1),(-1,-1),(1,-1)]
    for counter in range(0,4):
        
        if nt == nts[counter]:
            x_w,y_w = coordinates[counter]
            x = (x+x_w)/2
            y = (y+y_w)/2
            
    return(x,y)





# In[318]:


def get_seq_give_posx_posy(seq):
    
    # we start from center
    x ,y ,z= 0 ,0 ,0
    
    
    #pos_list = []
    #x_pos_list = []
    #y_pos_list = []
    #z_pos_list = []
    ############## this is to show the frame ################

    pos_list = [(-1,1),(1,1),(-1,-1),(1,-1)]
    x_pos_list = [-1,1,-1,1]
    y_pos_list = [1,1,-1,-1]
    z_pos_list = [0,0,0,0,0]
    
    

    ########################################################
    
    for nt in seq:
        #print(nt)

        x,y = get_nt_and_location_give_pos(x,y,nt)
        z = z+1
        
        #print(x,y)
        pos_list.append((x,y))
        x_pos_list.append(x)
        y_pos_list.append(y)
        z_pos_list.append(z)


    return(pos_list,x_pos_list,y_pos_list,z_pos_list)


# # show the plot

# In[319]:


import matplotlib.pyplot as plt
def show_plot(x_pos_list,y_pos_list):
    plt.scatter(x_pos_list, y_pos_list)
    plt.show()


# In[320]:


def final_def(seq):

    pos_list,x_pos_list,y_pos_list ,z_pos_list= get_seq_give_posx_posy(seq)
    show_plot(x_pos_list,y_pos_list)
    z_pos_list =np.random.rand(len(pos_list),len(pos_list))
    fig, ax = plt.subplots()
    ax.pcolormesh(x_pos_list, y_pos_list, z_pos_list)
    


# # now its time to see the results

# In[321]:


final_def(seq_1)


# In[322]:


final_def(seq_2)


# In[323]:


final_def(seq_3)


# In[324]:


final_def(seq_4)


# In[325]:


final_def(seq_5)


# In[326]:


final_def(seq_6)


# In[327]:


final_def(seq_7)


# In[ ]:





# In[ ]:




